A = [1, 2, 3]


# A.pop([index]) удаляет элемент, стоящий на индексе index и возвращает его. 
# По умолчанию index = len(A) - 1. Если список 0 длины, вызывает ошибку
# Если модуль индекса больше длины списка  --  ошибка
# Если индекс отрицательный, считает с конца. Последний элемент на месте -1

print(A.pop(), A.pop(-2), A.pop(0), A, end="\n\n")


# A.remove(value) удаляет первый попавшийся элемент value. Если такого нет  --  ошибка. Ничего не возвращает
A = [1, 2, 3]
A.remove(2)

print(A, end="\n\n")

# A.reverse() Ставит элементы в списке задом наперёд
A = [1, 2, 3]
A.reverse()

print(A, end="\n\n")


# A.sort(cmp=None, key=None, reverse=False) Сортирует список по возрастанию
# cmp(x, y) - функция от двух аргументов возвращающая
# key - функция, вызываемая на каждом элементе перед сравнением перед сравнением
# То есть это функция от одного аргумента, вовращающая то, что будут сравнивать вместо того, что она принимала
# Например можно по определённым правилам перевести строку в число и сравнивать не строки, а числа
# reverse - переворачивать список задом наперёд после сортировки или нет
def user_key (value):
	return value * 2

A = [3, 1, 2, 5, 6, 3 ,5]

B = list(A)
B.sort()
print(B)

B = A[:]
B.sort(key=user_key)  # Я передал имя функции, а не вызвал её. Об этом расскажу вживую
print(B)

B = list(A)
B.sort(reverse=True)
print(B, end="\n\n")
