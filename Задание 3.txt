	Списки
1. Напиши программу, суммирующую все элементы в списке

2. Напиши программу находящую произведение всех элементов списка

3. Напиши программу, находящую наибольшее число в списке

4. Напиши программу, находящую наименьшее число в списке

5. Напиши программу, считающую количество строк, у которых длина 2 или больше и первая и последняя цифры совпадают
	Например:
	Дан список: ['abc', 'xyz', 'aba', '1221']
	Ожидаемый результат: 2

6. Напиши программу, результатом работы которой является список, сортированный по возрастанию по последнему элементу в каждом кортеже списка (кортежи непустые)
	Например:
	Дан список: [(2, 5), (1, 2), (4, 4), (2, 3), (2, 1)]
	Ожидаемый результат: [(2, 1), (1, 2), (2, 3), (4, 4), (2, 5)]

7. Напиши программу, удаляющую повторяющиеся элементы в списке

8. Напиши программу, проверяющую пустой ли список

9. Напиши программу, копирующую список

10. Напиши программу, возвращающую список, состояющий из строк длинее, чем n

11. Напиши функцию, принимающую два списка и возвращающую правду, если у них есть хотя бы один совпадающий элемент

12. Напиши программу, которая выводит список без 0-го 4-го и 5-го элементов

13. Напиши программу, создающую 3-х мерный список, размером 3 на 4 на 6, заполненный '*'

14. Напиши программу, которая выводит числа списка, из которого удалили все чётные числа

15. Напиши программу, перемешивающую и выводящую получившийся список

16. Напиши программу, создающую 2 списка из квадратов первых и последних пяти элементов на срезе с отрезка от 1 до 30 включая концы
	Например:
	Берём отрезок от 1 до 30, включая концы. Выбираем на нём случайный отрезок длины >= 10, возводим в квадрат все числа на нём и берём первые 5 и пихаем в первый список и последние 5 и пихаем во второй список

17. Напиши программу, создающую список из квадратов элементов на срезе с отрезка от 1 до 30 включая концы за исключением первых 5

18. Напиши программу, возвращающую список перестановок всех элементов изначального списка

19. Напиши программу, возвращающую список, состоящий из всех элементов не общих для этих списков

20. Напиши программу, выводящую все индексы и соответствующие им элементы

21. Напиши программу, преобразующую список букв в строку

22. Напиши программу, находящую индекс заданного элемента в списке

23. Напиши программу, превращающую список списков в единый список, состоящий из элементов этих списков

24. Напиши программу, добавляющую все элементы одного списка в конец другого

25. Напиши программу, выбирающую случайный элемент из списка

26. Напиши программу, проверяющую идентичны ли два списка по кругу (то есть если в них элементы идут как-бы по кругу в определённом порядке. Например [1, 2, 3] и [3, 1, 2] и [2, 3, 1])

27. Напиши программу, находящую вторую наименьшую цифру в списке ([1, 1, 0, 0, -1, -1] -> 0)

28. Напиши программу, находящую вторую наибольшую цифру в списке

29. Напиши программу, возвращающую список уникальных значений ([1, 2, 2, 2, 3, 3] -> [1, 2, 3])

30. Напиши программу, возвращающую частоту появляения элементов в списке в любом удобном формате ([1, 1, 1, 2, 2, 3] -> 1: 3 раза, 2: 2 раза, 3: 1 раз)

31. Напиши программу, возвращающую количество элементов из заданного радиуса (все элементы больше или равны минимума и меньше или равны максимума)

32. Напиши программу, проверяющую содержит ли изначальный список подсписок

33. Напиши программу, возвращающую все подсписки списка

34. Напиши программу, возвращающую список простых чисел до заданного предела по принципу решета Эратосфена

35. Напиши программу, создающую список из конкатенировыных элементов списка с числом в заданном радиусе от 1 до n (['p', 'q'] & n=5 -> ['p1', 'q1', 'p2', 'q2', 'p3', 'q3', 'p4', 'q4', 'p5', 'q5'])

36. Напиши программу, возвращающую уникальный индентификатор переменной и её значение

37. Напиши программу, возвращающую одинаковые элементы для двух списков

38. Напиши программу, меняющую местами каждое n-ное и n+1-ое значение ([0,1,2,3,4,5] -> [1, 0, 3, 2, 5, 4])

39. Напиши программу, превращающую список целых в единое целое ([11, 33, 50] -> 113350)

40. Напиши программу, выводящую на экран элементы, сгруппированные по первой букве слова(все элементы слова)

41. Напиши программу, создающую большое количество списков, к которым можно как-то обратиться

42. Напиши программу, возвращающую все элементы, которые есть в первом, но нет во втором списке и все элементы, которых не хватает в списке из двух списков (['a','b','c','d','e','f'], ['d','e','f','g','h'] -> Не хватает в 1-ом: 'g', 'h'; Не хватает во 2-ом: 'a', 'b', 'c'; Дополнительные в 1-ом: 'a', 'b', 'c'; Дополнительные во 2-ом: 'g', 'h')

43. Напиши программу, разделяющую(на английском split) список на несколько переменных (длина списка указана и не меняется)

44. Напиши программу, генерирующую списки из 5 последовательных чисел, основываясь на данном (длина исходного списка кратна пяти)

45. Напиши программу, конвертирующую список пар значений в сортированный список уникальных значений ([(1, 2), (3, 4), (1, 2), (5, 6), (7, 8), (1, 2), (3, 4), (3, 4), (7, 8), (9, 10)] -> [1, 2, 3, 4, 5, 6, 7, 8, 9, 10])

46. Напиши программу, возвращающую список нечётных элементов

47. Напиши программу, вставляющую элемент перед каждым элементом в списке

48. Напиши программу, выводяющую каждый список в списке списков, используя только функцию print (и что-то в аргументах)

49. Преврати два списка в список словарей (["Black", "Red", "Maroon", "Yellow"], ["#000000", "#FF0000", "#800000", "#FFFF00"] -> [{'color_name': 'Black', 'color_code': '#000000'}, {'color_name': 'Red', 'color_code': '#FF0000'}, {'color_name': 'Maroon', 'color_code': '#800000'}, {'color_name': 'Yellow', 'color_code': '#FFFF00'}])

50. Напиши программу, сортирующую список вложенных словарей ([{'key': {'subkey': 1}}, {'key': {'subkey': 10}}, {'key': {'subkey': 5}}]  -> [{'key': {'subkey': 10}}, {'key': {'subkey': 5}}, {'key': {'subkey': 1}}])

51. Напиши программу, разделяющую список по каждому n-ому элементу (['a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n'], n=5 -> [['a', 'd', 'g', 'j', 'm'], ['b', 'e', 'h', 'k', 'n'], ['c', 'f', 'i', 'l']])

52. Напиши программу, вычисляющую разность двух списков (разность  --  элементы которые остануться, если удалить из изначального списка элементы, которые есть в вычитаемом [1, 2, 3] - [1, 2] -> [3]; [4, 5, 6] - [1, 2, 3, 4] -> [5, 6])

53. Напиши программу, создающую объект с бесконечным числом элементов

54. Напиши программу, конкатенирующую элементы символа

55. Напиши программу, удаляющую пару ключ значение из списка словарей, принимающую ключ

56. Напиши программу, превращающую строку в список

57. Напиши программу, проверяющую равны ли все элементы списка данной строке

58. Напиши программу, заменяющую в данном списке последний элемент на элементы из второго списка ([1, 3, 5, 7, 9, 10], [2, 4, 6, 8] -> [1, 3, 5, 7, 9, 2, 4, 6, 8])

59. Напиши программу, проверяющую существует ли n-ный элемент в списке. Если да, вернуть его, иначе вернуть -1

60. Напиши программу, находящую в списке кортежей кортеж с наименьшим вторым элементом

61. Напиши программу, создающую список пустых словарей

62. Напиши программу, выводящую все элементы списка в одну строку, разделённую пробелами

63. Напиши программу, вставляющую данную строку перед всеми элементами списка ([1,2,3,4], строка: emp -> ['emp1', 'emp2', 'emp3', 'emp4'])

64. Напиши программу, итерирующую сразу 2 списка одновременно

65. Напиши программу, позволяющую получить доступ по индексу к ключам словаря

66. Напиши программу, находящую в списке списков список с наибольшей суммой([1,2,3], [4,5,6], [10,11,12], [7,8,9] -> [10, 11, 12])

67. Напиши программу, проверяющую все ли значения списка больше, чем заданное значение

68. Напиши программу, расширяющую список без метода append ([10, 20, 30]
[40, 50, 60] -> [40, 50, 60, 10, 20, 30])

69. Напиши программу, удаляющую дупликаты из списка ([[10, 20], [40], [30, 56, 25], [10, 20], [33], [40]] -> [[10, 20], [30, 56, 25], [33], [40]])

70. Напиши программу, возвращающую глубину словаря ({'a':1, 'b': {'c': {'d': {}}}} -> 4)

71. Напиши программу, проверяющую все ли словари в списке пустые

72. Напиши программу, превращающую список со списками в единый список ([0, 10, [20, 30], 40, 50, [60, 70, 80], [90, 100, 110, 120]] -> [0, 10, 20, 30, 40, 50, 60, 70, 80, 90, 100, 110, 120])

73. Напиши программу, удаляющую из списка последовательные дупликаты ([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4] -> [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 4])

74. Напиши программу, запаковывающую последовательные дупликаты в списке ([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4] -> [[0, 0], [1], [2], [3], [4, 4], [5], [6, 6, 6], [7], [8], [9], [4, 4]])

75. Напиши программу, превращающую(кодирующую) строку или список элементов в список состоящий из списков [количество_последовательных_элементов, сам_последовательный_элемент] ([1, 1, 2, 3, 4, 4.3, 5, 1] -> [[2, 1], [1, 2], [1, 3], [1, 4], [1, 4.3], [1, 5], [1, 1]]; automatically -> [[1, 'a'], [1, 'u'], [1, 't'], [1, 'o'], [1, 'm'], [1, 'a'], [1, 't'], [1, 'i'], [1, 'c'], [1, 'a'], [2, 'l'], [1, 'y']])

76. Напиши программу, кодирующую строку или список элементов в список состоящий из списков, за исключением единичных элементов ([1, 1, 2, 3, 4, 4, 5, 1] -> [[2, 1], 2, 3, [2, 4], 5, 1])

77. Напиши программу, декодирующую список или строку элементов, закодированную по принципу номера 76 ([[2, 1], 2, 3, [2, 4], 5, 1] -> [1, 1, 2, 3, 4, 4, 5, 1])

78. Напиши программу, разбивающую список на два, где дана длина первой части ([1, 1, 2, 3, 4, 4, 5, 1], длина=3 -> [1, 1, 2], [3, 4, 4, 5, 1])

79. Напиши программу, удаляющую из списка k-тый элемент и выводящую получившийся список

80. Напиши программу, вставляющую данный элемент на k-тую позицию

81. Напиши программу, выбирающую n случайных элементов из заданного списка

82. Напиши программу, составляющую все комбинации из n элементов из элементов данного списка ([1, 2, 3, 4, 5, 6, 7, 8, 9], n=2 -> [1, 2] [1, 3] [1, 4] [1, 5] .... [7, 8] [7, 9] [8, 9])

83. Напиши программу, выводящую произведение длины списка и суммы всех округлённых чисел в нём ([22.4, 4.0, -16.22, -9.1, 11.0, -12.22, 14.2, -5.2, 17.5] -> 243)

84. Напиши программу, округляющую все числа, находящую максимальное и минимальное число среди округлённых, умножающую каждое число на 5 и находящую в умноженных на 5 все уникальные, выовдя их в порядке возврастания, разделённых пробелами ([22.4, 4.0, 16.22, 9.1, 11.0, 12.22, 14.2, 5.2, 17.5] -> min: 4, max: 22, result: 20 25 45 55 60 70 80 90 110)

85. Напиши программу, создающую многомерный список, заполненный нулями ([[0, 0], [0, 0], [0, 0]])

86. Напиши программу, создающую сетку чисел 3 на 3

87. Напиши программу, считывающую матрицу размером f на q, где f - число колонн, q - число строку, с консоли и находящую сумму чисел в каждой колонне 
(Input rows: 2
 Input columns: 2
 1 2
 3 4
 sum for each column:
 4 6)

88. Напиши программу, считывающую размер квадратной матричцу и саму матрицу с консоли и находящую сумму её первой диагонали (из левого верхнего угла в правый нижний)

89. Напиши программу, совмещающую два списка списков в единый список списков ([[1, 3], [5, 7], [9, 11]], [[2, 4], [6, 8], [10, 12, 14]] -> [[1, 3, 2, 4], [5, 7, 6, 8], [9, 11, 10, 12, 14]])

90. Напиши программу, считающую сколько списков в данном списке списков ([[1, 3], [5, 7], [9, 11], [13, 15, 17]] -> 4; [[2, 4], [[6, 8], [4, 5, 8]], [10, 12, 14]] -> 3)

91. Напиши программу, ищущую список с максимальной и минимальной длиной ([[0], [1, 3], [5, 7], [9, 11], [13, 15, 17]] -> max: (3, [13, 15, 17]), min: (1, [0]))

92. Напиши программу, проверяющую является ли данный список списков подсписком другого списка списков

93. 