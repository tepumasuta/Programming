--Введение
	X~Знание терминов(0/7)
X~ОС
X~ЯП
X~Интерпритатор
X~Компилятор
X~Интепретируемый ЯП
X~Компилируемый ЯП
X~Интерактивный режим

	Плюсы и минусы
X~Интерпретируемый(0/7;0/2)
	X~Плюсы
		X~Возможность работы в интерактивном режиме
		X~Возможность выполнения кода кусками
		X~Кросс-платформенность
		X~Рефлексия
		X~Динамическая типизация
		X~Меньший размер исполняемых файлов
		X~Динамические области видимости
	X~Минусы
		X~Медленная скорость работы
		X~Кросс-платформенность
X~Компилируемый(0/5;0/3)
	X~Плюсы
		X~Скорость
		X~Контроль
		X~Управление памятью
		X~Управление процессором
		X~Платформо-зависимость
	X~Минусы
		X~Платформо-зависимость
		X~Сложность отладки
		X~Компиляция

	X~Знание терминов(0/4)
X~Кросс-платформенность
X~Платформо-зависимость
X~Исполняемые файлы
X~Рефлексия

--Типизация языков(0/4)
X~Разновидность
X~динамическая/статическая
X~явная/неявная
X~сильная/слабая
	X~Знание терминов(0/6)
X~Динамическая типизация
X~Статическая типизация
X~Явная типизация
X~Неявная типизация
X~Сильная типизация
X~Слабая типизация
	X~Типизация Python(0/1)

--Стандартная библиотека python
	X~Знание терминов(0/2)
X~Стандартная библиотека python
X~Модуль
	X~Основные модули python(0/4)
		X~sys
		X~time
		X~os
		X~math

--IDE и редакторы кода
	X~Знание терминов(0/3)
X~IDE (расшифровка и перевод)
X~IDE (сам термин)
X~Редактор кода
	X~Основные IDE для python(0/4)
		X~PyCharm
		X~Visual Studio (vs)
		X~Spyder
		X~Eclipse
	X~Основные редакторы кода для python(0/3)
		X~Notepad++
		X~Vim
		X~Sublime Text 3

--Работа из консоли
	X~Знание терминов(0/4)
X~ПО
X~Консоль(С ПО)
X~Консоль(без ПО)
X~Аргументы командной строки
	X~Основные команды консоли(0/8)
X~help
X~cd
X~cd(Расшифровка)
X~cd
X~cls
X~cls(Расшифровка)
X~md
X~md(Расшифровка)
	X~Практические приёмы(0/3)
X~Как открыть консоль
X~Как запустить python программу из консоли
X~Как перейти на каталог выше

--Интерактивный режим
	X~Основы работы(0/3)
X~Как выйти из интерактивного режима
X~Что случится если передать выражение
X~Как пользоваться help

--Правила оформления кода
X~Зачем нужно оформлять код
	X~Основные стили написания кода(0/4)
		X~camelCase
		X~PascalCase
		X~kebab-case
		X~snake_case
	X~Стиль написания кода в python(0/1)

--PEP8
	X~Знание терминов(0/1)
X~PEP8

--Модули
	X~Знание терминов(0/1)
X~Парадигма программирования
	X~Подходы к написанию кода(0/3)
X~Модульный
x~Объектно-ориентированный(ООП)
X~Функциональный
	X~Парадигмы программирования(0/19)
X~Императивное программирование
X~Декларативное программирование
X~Структурное программирование
X~Функциональное программирование
X~Логическое программирование
X~Объектно-ориентированное программирование
X~Структурное программирование
X~Процедурное программирование
X~Аппликативное программирование
X~Обобщённое программирование
X~Доказательное программирование
X~Порождающее программирование
X~Аспектно-ориентированное программирование
X~Агентно-ориентированное программирование
X~Рекурсия
X~Автоматное программирование
X~Событийно-ориентированное программирование
X~Компонентно-ориентированное программирование
X~Грамотное программирование
	X~Иерархическая схема развития парадигм(0/4)
X~Первый слой
X~Второй слой
X~Третий слой
X~Четвёртый слой

--Библиотеки и фреймфорки
	X~Знание терминов(0/2)
X~Фреймворк
X~Библиотека
	X~Разница(0/1)

--Ссылочная модель данных
	X~Знание терминов(0/2)
X~Модель данных
X~Инициализация
	X~Ссылочная модель данных(0/1)
X~Как она работает?

--Сборщик мусора
	X~Сборщик мусора(0/2)
X~Что это?
X~Как он работает?

--built-in типы
	X~Знание терминов(0/3)
X~built-in тип
X~Mutable тип
X~Immutable тип
	X~built-in типы(0/15)
X~None Type(class NoneType)
X~Boolean Type(class bool)
X~Integer Type(class int)
X~Real Type(class float)
X~Complex Type(class complex)
X~List Type(class list)
X~Tuple Type(class tuple)
X~Range Type(class range)
X~String Type(class str)
X~Bytes Type(class bytes)
X~Bytes Array Type(class bytearray)
X~MemoryView(class memoryview)
X~Set Type(class set)
X~Frozen Set Type(class frozenset)
X~Dictionary Type(class dict)
	X~Иерархическая схема классов(0/7)
X~Блок неопределнных значений
X~Числовой блок
X~Блок последовательностей
X~Блок строковых последовательностей
X~Блок бинарных последовательностей
X~Блок множеств
X~Блок отображаемых типов
	X~Изменяемые built-in типы(0/12)
X~Целое число
X~Дробное число
X~Комплексное число
X~Строка
X~Неизменяемое множество
X~Кортеж
X~Последовательность байтов
X~Список последовательностей байтов
X~MemoryView
X~Отсутсвующее значение
X~Логическое число
X~Диапозон
	X~Неизменяемые built-in типы(0/3)
X~Множество
X~Словарь
X~Список

--Выражения
	X~Знание терминов(0/1)
X~Выражение(expression)
	X~Выражение(0/2)
X~Что python делает, когда встречает выражение?
X~Как может выглядеть выражение?
	X~Полезные функции(0/5)
X~print(obj)
X~input(addition)
X~id(obj)
X~type(obj)
X~len(obj)

--Приведение типов
	X~Типы(0/3)
X~Что такое типы?
X~Что таке приведение типов?
X~Как приводить типы в общем виде?

--Числовые типы
	X~Знание терминов(0/4)
		X~Атрибуты класса(0/3)
			X~Свойства
			X~Поля
			X~Атрибуты
		X~Классовые функции
		X~Аргумент функции(0/2)
			X~Параметр
			X~Аргумент
		X~Ключевой аргумент функции(0/2)
			X~Именовый
			X~Ключевой
	X~Практические приёмы(0/6)
		X~Как использовать атрибуты класса?
		X~Как использовать классовые функции?(0/2)
			X~Вызывая у самого объекта
			X~Вызывая через класс
		X~Как вводить ключевые параметры?
		X~Как использовать функцию?
		X~Как работает функция? 
		X~Функция может быть использована без аргументов
	X~Практические соглашения(0/1)
X~Что значит аргумент функции, заключённый в квадратные скобки?