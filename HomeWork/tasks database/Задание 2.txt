В задачах A-L необходимо сначала написать алгоритм на бумажке и только потом приступать к написанию кода. Алгоритм приложить к решению. Алгоритм должен работать корректно для максимального количества случаев (То есть не будет как в школе, что тебе 100% дадут адекватные входные данные)


A: Посчитать сколько цифр в числе. Функцию len использовать нельзя

B: Написать алогритм поиска НОД (Наибольший общий делитель)

C: Написать алгоритм, говорящий, простое ли число

D: Посчитать, сколько в числе битов (Если ты найдёшь несколько способов, прорешай для каждого)

E: Написать алгоритм, раскладывающий число на множители

!F: Написать алгоритм, выводящий число задом наперёд (цифры в обратном порядке)

G: Написать алгоритм приёма входных данных (Он больше чем один. Мне надо как минимум 2)

H: Написать алгоритм поиска максимального и минимального числа во входном потоке данных

I: Найти во входном потоке данных числа:
   Кратные 7
   Не кратные 8 и меньше 2000
   Целые
   Дробные и больше 50 но меньше 80
   Полиномы
   Числа, имеющие только 3 делителя
   Все числа, длина которых 3, кратные 3, 7, 8, не кратные 9
   Максимальное, минимальное

J: Дано n разных элементов. Посчитать, сколько перестановок (теория вероятностей) можно составить из этих элементов

K: Посчитать число Пи с заданной точностью

L: Посчитать факториал входного числа

В задниях с M по B необходимо прислать только результат, т.к. это тупые задачи на вычисления

M: Почситать чему равна сумма первых 768 членов следующей последовательности:
   1 + 0.5 + 0.25 + ...

N: Почситать чему равна сумма первых 1938 членов следующец последовательности:
   7 / 5 - 9 / 3 + 11 / 2 - 13 / 2 + 15 / 3 - 17 / 5 + 19 / 8 - 21 / 12 + ...

O: Найти сумму всех элементов следующей прогрессии:
   q ^ n
   от q = 7 до q = -25 при n принадлежашим множеству B = {1, 2, 3, 4, ..., 97}