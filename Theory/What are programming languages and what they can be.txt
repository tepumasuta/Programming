/*Надо бы разделить на файлы по пунктам и объединить их по темам. Ещ неплохо бы составить одну классификацию разбиения по темам и по одному поному сборнику всего, что есть на пункты.*/

--Введение
	X~Знание терминов(0/7)
		X~ОС
		X~ЯП
		X~Интерпритатор
		X~Компилятор
		X~Интепретируемый ЯП
		X~Компилируемый ЯП
		X~Интерактивный режим

	Плюсы и минусы
X~Интерпретируемый(0/7;0/2)
	X~Плюсы(0/7)
		X~Возможность работы в интерактивном режиме
		X~Возможность выполнения кода кусками
		X~Кросс-платформенность
		X~Рефлексия
		X~Динамическая типизация
		X~Меньший размер исполняемых файлов
		X~Динамические области видимости
	X~Минусы(0/2)
		X~Медленная скорость работы
		X~Кросс-платформенность
X~Компилируемый(0/5;0/3)
	X~Плюсы(0/5)
		X~Скорость
		X~Контроль
		X~Управление памятью
		X~Управление процессором
		X~Платформо-зависимость
	X~Минусы(0/3)
		X~Платформо-зависимость
		X~Сложность отладки
		X~Компиляция

	X~Знание терминов(0/4)
		X~Кросс-платформенность
		X~Платформо-зависимость
		X~Исполняемые файлы
		X~Рефлексия

--Типизация языков
	X~Разновидность(0/6)
		X~динамическая/статическая
		X~явная/неявная
		X~сильная/слабая
	X~Знание терминов(0/6)
		X~Динамическая типизация
		X~Статическая типизация
		X~Явная типизация
		X~Неявная типизация
		X~Сильная типизация
		X~Слабая типизация
	X~Типизация Python(0/1)

--Стандартная библиотека python
	X~Знание терминов(0/2)
		X~Стандартная библиотека python
		X~Модуль
	X~Основные модули python(0/4)
		X~sys
		X~time
		X~os
		X~math

--IDE и редакторы кода
	X~Знание терминов(0/3)
		X~IDE (расшифровка и перевод)
		X~IDE (сам термин)
		X~Редактор кода
	X~Основные IDE для python(0/4)
		X~PyCharm
		X~Visual Studio (vs)
		X~Spyder
		X~Eclipse
	X~Основные редакторы кода для python(0/3)
		X~Notepad++
		X~Vim
		X~Sublime Text 3

--Работа из консоли
	X~Знание терминов(0/4)
		X~ПО
		X~Консоль(С ПО)
		X~Консоль(без ПО)
		X~Аргументы командной строки
	X~Основные команды консоли(0/4)
		X~help
		X~cd (действие + расшифровка)
		X~cls (действие + расшифровка)
		X~md (действие + расшифровка)
	X~Практические приёмы(0/3)
		X~Как открыть консоль
		X~Как запустить python программу из консоли
		X~Как перейти на каталог выше

--Интерактивный режим
	X~Основы работы(0/3)
		X~Как выйти из интерактивного режима
		X~Что случится если передать выражение
		X~Как пользоваться help

--Правила оформления кода
	X~Зачем нужно оформлять код
	X~Основные стили написания кода(0/4)
		X~camelCase
		X~PascalCase
		X~kebab-case
		X~snake_case
	X~Стиль написания кода в python(0/1)

--PEP8
	X~Знание терминов(0/1)
		X~PEP8

--Модули
	X~Знание терминов(0/1)
		X~Парадигма программирования
	X~Подходы к написанию кода(0/3)
		X~Модульный
		x~Объектно-ориентированный(ООП)
		X~Функциональный
	X~Парадигмы программирования(0/19)
		X~Императивное программирование
		X~Декларативное программирование
		X~Структурное программирование
		X~Функциональное программирование
		X~Логическое программирование
		X~Объектно-ориентированное программирование
		X~Структурное программирование
		X~Процедурное программирование
		X~Аппликативное программирование
		X~Обобщённое программирование
		X~Доказательное программирование
		X~Порождающее программирование
		X~Аспектно-ориентированное программирование
		X~Агентно-ориентированное программирование
		X~Рекурсия
		X~Автоматное программирование
		X~Событийно-ориентированное программирование
		X~Компонентно-ориентированное программирование
		X~Грамотное программирование
	X~Иерархическая схема развития парадигм(0/4)
		X~Первый слой
		X~Второй слой
		X~Третий слой
		X~Четвёртый слой

--Библиотеки и фреймфорки
	X~Знание терминов(0/2)
		X~Фреймворк
		X~Библиотека
	X~Разница

--Ссылочная модель данных
	X~Знание терминов(0/2)
		X~Модель данных
		X~Инициализация
	X~Ссылочная модель данных(0/3)
		X~Как она работает
		X~Пример
		X~Что это значит для программиста

--Сборщик мусора
	X~Сборщик мусора(0/3)
		X~Что это
		X~Как он работает
		X~Что это значит для программиста

--built-in типы
	X~Знание терминов(0/3)
		X~built-in тип
		X~Mutable тип
		X~Immutable тип
	X~built-in типы(0/15)
		X~None Type(class NoneType)
		X~Boolean Type(class bool)
		X~Integer Type(class int)
		X~Real Type(class float)
		X~Complex Type(class complex)
		X~List Type(class list)
		X~Tuple Type(class tuple)
		X~Range Type(class range)
		X~String Type(class str)
		X~Bytes Type(class bytes)
		X~Bytes Array Type(class bytearray)
		X~MemoryView(class memoryview)
		X~Set Type(class set)
		X~Frozen Set Type(class frozenset)
		X~Dictionary Type(class dict)
	X~Иерархическая схема классов(0/7)
		X~Блок неопределнных значений
		X~Числовой блок
		X~Блок последовательностей
		X~Блок строковых последовательностей
		X~Блок бинарных последовательностей
		X~Блок множеств
		X~Блок отображаемых типов
	X~Изменяемые built-in типы(0/12)
		X~Целое число
		X~Дробное число
		X~Комплексное число
		X~Строка
		X~Неизменяемое множество
		X~Кортеж
		X~Последовательность байтов
		X~Список последовательностей байтов
		X~MemoryView
		X~Отсутсвующее значение
		X~Логическое число
		X~Диапозон
	X~Неизменяемые built-in типы(0/3)
		X~Множество
		X~Словарь
		X~Список

--Выражения
	X~Знание терминов(0/1)
		X~Выражение(expression)
	X~Выражение(0/2)
		X~Что python делает, когда встречает выражение?
		X~Как может выглядеть выражение?
	X~Полезные функции(0/5)
		X~print(obj)
		X~input(addition)
		X~id(obj)
		X~type(obj)
		X~len(obj)

--Приведение типов
	X~Типы(0/3)
		X~Что такое типы?
		X~Что таке приведение типов?
		X~Как приводить типы в общем виде?

--Числовые типы
	X~Знание терминов(0/3;0/1;0/2;0/2)
		X~Атрибуты класса(0/3)
			X~Свойства
			X~Поля
			X~Атрибуты
		X~Классовые функции
		X~Аргумент функции(0/2)
			X~Параметр
			X~Аргумент
		X~Ключевой аргумент функции(0/2)
			X~Именовый
			X~Ключевой
	X~Практические приёмы(0/6)
		X~Как использовать атрибуты класса?
		X~Как использовать классовые функции?(0/2)
			X~Вызывая у самого объекта
			X~Вызывая через класс
		X~Как вводить ключевые параметры?
		X~Как использовать функцию?
		X~Как работает функция? 
		X~Функция может быть использована без аргументов
	X~Практические соглашения(0/1)
		X~Что значит аргумент функции, заключённый в квадратные скобки?

//Подправить классы, херня какая-то
--Класс int
	X~Описание и свойства класса int(0/5)
		X~Класс int хранит в себе целое число в 10 с.с.
		X~К классу int применимы все логические операторы
		X~К классу int можно привести класс str
		X~Это неизменяемый класс
		X~Применима функция abs
	X~Классовые методы(0/3)
		X~as_integer_ratio()
		X~bit_length()
		X~from_bytes(bytes, byteorder, *, signed=False)
	X~Практические приёмы(0/3)
		X~Как создать объект класса int(0/4;0/1)
			X~Литералом(0/4)
				X~Дестичный
				X~Двоичный
				X~Восьмеричный
				X~Шестнадцатиричный
			X~С помощью создания экземпляра класса
		X~Как привеси строку или другой преводимый тип?
		X~Как ввести число с клавиатуры?
		X~Можно ли разделять как-то числа в десятичном литерале?

--Класс float
	X~Описание и свойства класса float(0/6)
		X~Класс float хранит в себе дробное число в 10 с.с.
		X~К классу float применимы все логические операторы
		X~К классу float можно привести класс str
		X~Класс float можно привести к классу int
		X~Это неизменяемый класс
		X~Применима функция abs
	X~Классовые методы(0/5)
		X~as_integer_ratio()
		X~conjugate()
		X~hex()
		X~is_integer()
		X~from_hex(string)
	X~Практические приёмы(0/4)
		X~Как создать обхект класса float(0/2)
			X~Классом
			X~Литералом(0/3)
				X~Обычный
				X~С десятичной точкой
				X~С экспонентой
		X~Как привести другие классы к классу float
		X~Что стоит учитывать при использовании функции as_integer_ratio
		X~Как происходит преобразование к классу int

--Класс complex
	X~Описание и свойства класса complex(0/2)
		X~Представляет комплексные дробный и целые числа
		X~Атрибуты: real, imag
	X~Классовые функции(0/1)
		X~conjugate()
	X~Как создаётся

--Класс bool
	X~Описание свойств класса bool(0/2)
		X~Представляет логическое значение
		X~Является подклассом класса int
	X~Преобразование к классу bool(0/4)
		X~int(даёт ложь при значении 0)
		X~float(даёт ложь при значении 0.0)
		X~complex(даёт ложь при значении (0, 0))
		X~str(даёт ложь при значении '')
	X~Литералы класса bool(0/2)
		X~True
		X~False

//Кончил на побитовых
--Операторы
	X~Знание терминов(0/5)
		X~Оператор
		X~Операнд
		X~Унарный оператор
		X~Бинарный оператор
		X~Тернарный оператор
	X~Классификация операторов(0/7)
		X~Арифметические операторы
		X~Операторы сравнения (реляционные)
		X~Операторы присваивания
		X~Побитовые операторы
		X~Логические операторы
		X~Операторы членства (Membership operators)
		X~Операторы тождественности (Identity operators)
	X~Арифмитические операторы(0/2)
		X~Унарные(0/2)
			X~Унарный плюс "+"
			X~Унарный минус "-"
		X~Бинарные(0/7)
			X~Сложение "+"
			X~Вычитание "-"
			X~Умножение "*"
			X~Деление "/"
			X~Деление по модулю "%"
			X~Возведение в степень "**"
			X~Целочисленное деление "//"
	X~Операторы сравнения(0/6)
		X~Бинарные(0/6)
			X~Равно "=="
			X~Не равно "!="
			X~Больше ">"
			X~Меньше "<"
			X~Больше или равно ">="
			X~Меньше или равно "<="
	X~Операторы присваивания(0/8)
		X~Бинарные(0/8)
			X~Оператор связывания/присваивания "=" 
			X~Плюс равно "+="
			X~Минус равно "-="
			X~Умножить равно "*="
			X~Делить равно "/="
			X~Процент равно "%="
			X~Возыедение в степень с присваиванием "**="
			X~Деление нацело с присваиванием "//="
	X~Побитовые операторы(0/)
		X~Унарные(0/1)
			X~Инверсия "~"
		X~Бинарные(0/)